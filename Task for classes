 //// Task-6
 // 1.write a class below the information
 
//  The class Movie is stated below. An instance of class Movie represents a film. This class has the 
//  following three properties:

// 1).title, which is a String representing the title of the movie
// 2).studio, which is a String representing the studio that made the movie
// 3).rating, which is a String representing the rating of the movie (i.e. PG­13, R, etc)
// a) Write a constructor for the class Movie, which takes a String representing the title of the movie, 
// a String representing the studio, 
// and a String representing the rating as its arguments, and sets the respective class properties to these values.

// b) The constructor for the class Movie will set the class property rating to "PG" as default when no rating is provided.

// c) Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of
// only those movies in the input array with a rating of "PG". You may assume the input array is full of Movie instances.
// The returned array need not be full.

// d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”,
// the studio “Eon Productions”, and the rating “PG­13”           

	class Movie { 
	constructor(title= '', studio = '', rating = 'PG') { 
	this.title = title; 
	this.studio = studio; 
	this.rating = rating; 
	} 
	 
	getPG(movies = [], rating = '') { 
  return movies.filter((m) => m.rating === rating); 
	} 
 
	} 
	 

	const movie1 = new Movie('CasinoRoyale', 'Eon Productions', 'PG13'); 
	const movie2 = new Movie('varisu', 'sun', 'PG'); 
	const movie3 = new Movie('thunivu', 'lica', 'PG'); 
	const movie4 = new Movie('superman', 'EROS', 'PG13'); 
	const movie5 = new Movie('spiderman', 'LCU', 'R'); 
	 
	const moviesArray = [movie1,movie2,movie3,movie4,movie5]; 
	 
	console.log(movie1.getPG(moviesArray, "PG")); 
	console.log(movie4.getPG(moviesArray, 'R'));


    //2. write a class for circle

    class circle{
        constructor (radiusdouble= 1, colorstring="red"){
        this.radiusdouble = radiusdouble;
        this.colorstring = colorstring
      
        }
       
       circle(radiusdouble,colorstring){
        console.log(this.radiusdouble, this.colorstring)
       }
        getRadius(double){
        console.log(double)
        }
        setRadius(radiusdouble){
        console.log(this.radiusdouble)
        }
        getcolor(string){
        console.log(string)
        }
        setcolor(colorstring){
        console.log(this.colorstring)
        }
        tostring(radius,color){
         let circle = [radius,color]
         console.log(circle)
        }
        getArea(radius){
         let area = Math.PI*radius*radius
         console.log(area.toFixed(2))
        }
        getCircumference(radius){
        let circumference = 2*Math.PI*radius
        console.log( circumference.toFixed(2))
        }
     }
     
     var usecase = new circle()
     
        usecase.circle()
        usecase.getRadius(5)
        usecase.setRadius()
        usecase.getcolor("yellow")
        usecase.setcolor()
         usecase.tostring(3,"green")
        usecase.getArea(7)
        usecase.getCircumference(8)



//3. write a person class to hold all the detail

class person{
constructor(name,age,DOB,email,address){
this.name = name;
this.age = age;
this.DOB = DOB;
this.email = email;
this.address = address
}
    addonedetail(gender){
        this.gender = gender
       }
}

var person1 = new person("balan", 28, 1994, "balancivil9133@gmail.com","chennai");
var person2 = new person("vasanth",23,2002,"vasanth9133@gmail.com","coimbatore");


console.log(person1.name)
console.log(person2.email)

person1.addonedetail("male")
console.log(person1)


//4. write a class to calculate the uber price

class uber{
constructor(cartype,coach,member,from,destination,KM){
this.cartype = cartype;
this.coach = coach;
this.member = member;
this.from = from;
this.destination = destination
this.KM = KM
}
    uberprice(perkm){
        return "Rs."+ perkm * this.KM
       }
}

var person1 = new uber("shift", "A/c", 4,"madurai","chennai",450);
var person2 = new uber("swedan","Non-A/c",5,"trichy","coimbatore",350);


console.log(person1.uberprice(11))
console.log(person2.uberprice(13))
